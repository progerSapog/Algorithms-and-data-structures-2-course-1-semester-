package checkers;

/**
 * Класс реализующий сам процесс игры.
 * */
public class Game
{
    
    static Board board;    //хранение текущего состояния поля

    /**
     * Конструктор по умолчанию.
     * Создание пустой доски, выбор команд игроков.
     * */
    Game()
    {
        board  = new Board();

        //Человек - белые. Ходит первым
        //Робот   - черные.
        White.owner = Owner.HUMAN;
        Black.owner = Owner.COMPUTER;
    }

    /**
     * Выводит строку с указанием победителя партии.
     * Анализирует кол-во шашек разных цветов на столе.
     * */
    private void whoWin()
    {
        UserInteractions.PrintSeparator('_');
        if (Game.board.blackCheckers == 0)
        {
            System.out.println("\t\t\t\t\t\t\t" + "\u001B[33m" + "победил человек!" + "\u001B[0m");
        }
        else if (Game.board.whiteCheckers == 0)
        {
            System.out.println("\t\t\t\t\t\t\t" + "\u001B[33m" + "Победила машина!" + "\u001B[0m");
        }
        UserInteractions.PrintSeparator('_');
    }

    /**
     * Запуск и поддержание игрового процесса.
     * */
    public void PlayGame()
    {
        //Пока игра не закончилась
        while(!Game.board.CheckGameComplete())
        {
            White.Move();                                  //ход человека

            if(Game.board.CheckGameComplete())
            {                                              //если после данного хода
                Game.board.Display();                      //игра кончилась, то заканчиваем игру
                break;
            }

            Game.board.Display();                          //прорисовка поля

            Black.Move();                                  //ход COMPUTER
            if(Game.board.CheckGameComplete())
            {            //если после данного хода
                Game.board.Display();                      //игра кончилась, то заканчиваем игру
                break;
            }
        }

        whoWin();                                          //после выхода из цикла
                                                           //определяем победителя
    }

    public static void printGameReference()
    {
        System.out.println();
        System.out.println("\t\t\t\t\t\t\033[0;4mСправка об игре");
        System.out.println("Замечание\u001B[0m: стандартные Английские шашки играются на поле 8х8, данная\n" +
                "модификация играется на поле 12х12 (Размер поля и расстановка шашек\n" +
                "аналогичная Канадским шашкам).");
        System.out.println();
        System.out.println("\t\t\t\t\t\t\033[0;4mПравила игры\u001B[0m");
        System.out.println(" Цель игры — уничтожить все шашки противника или лишить их\n" +
                "возможности хода («запереть»).\n" +
                " Игра проводится на доске 12×12 клеток. В начальной позиции у каждого\n" +
                "игрока по 30 шашек, расположенных на первых пяти рядах на черных\n" +
                "клетках.\n" +
                " Первый ход делают белые шашки (Игрок - человек). Простая шашка ходит\n" +
                "по диагонали вперёд на одну клетку.\n" +
                " При достижении любого поля последней горизонтали, простая шашка\n" +
                "превращается в дамку. Дамка может ходить на одно поле по диагонали как\n" +
                "вперёд так и назад.\n" +
                " Взятие обязательно, если оно возможно. Шашки снимаются с доски лишь\n" +
                "после того, как берущая шашка остановилась. При нескольких вариантах\n" +
                "взятия игрок выбирает вариант взятия по своему усмотрению, и в выбранном\n" +
                "варианте необходимо бить все доступные для взятия шашки. При взятии\n" +
                "дамка побьет только через одно поле в любую сторону, а не на любое поле\n" +
                "диагонали, как в русских или международных шашках.");
    }

    public static void printStartError()
    {
        System.out.println();
        System.out.println("\u001B[31mНеверные аргументы запуска!\u001B[0m");
        System.out.println("Для получения справки о программе необходимо передать аргумент: '-h' или '--help'");
        System.out.println("Для запуска программы необходимо передать аргумент:             '-start'");
    }
}